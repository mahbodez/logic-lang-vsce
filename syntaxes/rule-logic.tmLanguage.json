{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Rule Logic",
  "scopeName": "source.rule-logic",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#built-in-functions"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#indexing"
    },
    {
      "include": "#identifiers"
    },
    {
      "include": "#lists"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.rule-logic",
          "match": "#.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.rule-logic",
          "match": "\\b(define|constraint|const|expect)\\b"
        },
        {
          "name": "keyword.other.rule-logic",
          "match": "\\b(weight|transform)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.logical.rule-logic",
          "match": "\\|(?!\\s)"
        },
        {
          "name": "keyword.operator.logical.rule-logic",
          "match": "&(?!\\s)"
        },
        {
          "name": "keyword.operator.logical.rule-logic",
          "match": "\\|\\s+\\w+"
        },
        {
          "name": "keyword.operator.logical.rule-logic",
          "match": "&\\s+\\w+"
        },
        {
          "name": "keyword.operator.logical.rule-logic",
          "match": "~"
        },
        {
          "name": "keyword.operator.logical.rule-logic",
          "match": "\\^"
        },
        {
          "name": "keyword.operator.logical.rule-logic",
          "match": ">>"
        },
        {
          "name": "keyword.operator.comparison.rule-logic",
          "match": ">=|<=|==|>|<"
        },
        {
          "name": "keyword.operator.assignment.rule-logic",
          "match": "="
        }
      ]
    },
    "built-in-functions": {
      "patterns": [
        {
          "name": "support.function.builtin.rule-logic",
          "match": "\\b(exactly_one|sum|mutual_exclusion|clamp|threshold|at_least_k|at_most_k|exactly_k|threshold_implication|conditional_probability|greater_than|less_than|equals|threshold_constraint)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.rule-logic",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.rule-logic",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.rule-logic",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.rule-logic",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.rule-logic",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.rule-logic",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "indexing": {
      "patterns": [
        {
          "name": "meta.structure.indexing.rule-logic",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\s*\\[([^\\]]+)\\]",
          "captures": {
            "0": {
              "name": "meta.indexing.rule-logic"
            },
            "1": {
              "name": "meta.indexing.content.rule-logic",
              "patterns": [
                {
                  "include": "#numbers"
                },
                {
                  "include": "#identifiers"
                },
                {
                  "name": "punctuation.separator.slice.rule-logic",
                  "match": ":"
                },
                {
                  "name": "punctuation.separator.comma.rule-logic",
                  "match": ","
                }
              ]
            }
          }
        }
      ]
    },
    "lists": {
      "patterns": [
        {
          "name": "meta.structure.array.rule-logic",
          "begin": "\\[",
          "end": "\\]",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.array.begin.rule-logic"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.array.end.rule-logic"
            }
          },
          "patterns": [
            {
              "include": "#numbers"
            },
            {
              "name": "punctuation.separator.array.rule-logic",
              "match": ","
            }
          ]
        }
      ]
    }
  }
}